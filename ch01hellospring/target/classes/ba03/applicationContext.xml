<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        引用类型的自动注入：spring框架根据某些规则可以自动给引用类型赋值。不用你在给引用类型复制了
        使用的规则是byName、byType.
        1:byName(按名称注入):java类中引用类型的属性和spring容器中<bean>的id名称一样，
                            且数据类型一致，这样的容器中的bean，spring能够赋值给引用类型
                 语法：<bean id="xxx" class="xxxx" autowire="byName">
                 简单类型属性赋值
                 </bean>
        2：byType(按类型注入);java类中引用类型的数据类型和spring容器中的<bean>的class属性
                            是同源关系，这样的bean能够赋值给引用类型
           同源就是一类的意思：
           1.Java类中引用类型的数据类型和bean的class的值是一样的；
           2.Java类中引用类型的数据类型和bean的class的值是父子类的关系；
           3.Java类中引用类型的数据类型和bean的class的值是接口和实现类关系的；
           语法：
             <bean id="xxx" class="xxxx" autowire="byType">
                 简单类型属性赋值
                 </bean>
    -->


    <bean id="mystudent" class="com.zzjm.ba03.Student" autowire="byType">
        <property name="name" value="王武"></property>
        <property name="age"  value="34"/>
    </bean>
    <!--<bean id="myschool" class="com.zzjm.ba03.School">
        <property name="name" value="北京大学"/>
        <property name="address" value="北京"/>
    </bean>
    -->
    <!--声明school的子类-->
    <bean id="privmarySchool" class="com.zzjm.ba03.primarySchool">
        <property name="name" value="北京小学"/>
        <property name="address" value="北京大兴区"/>
    </bean>
</beans>